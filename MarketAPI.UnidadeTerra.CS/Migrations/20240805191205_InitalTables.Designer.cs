// <auto-generated />
using System;
using MarketAPI.UnidadeTerra.CS.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MarketAPI.UnidadeTerra.CS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240805191205_InitalTables")]
    partial class InitalTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MarketAPI.UnidadeTerra.CS.Models.Market", b =>
                {
                    b.Property<int>("MarketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MarketId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MarketId");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("MarketAPI.UnidadeTerra.CS.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("SaleId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MarketAPI.UnidadeTerra.CS.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SaleId"));

                    b.Property<int>("MarketId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SaleTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SaleId");

                    b.HasIndex("MarketId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("MarketAPI.UnidadeTerra.CS.Models.Product", b =>
                {
                    b.HasOne("MarketAPI.UnidadeTerra.CS.Models.Sale", "Sale")
                        .WithMany("Products")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("MarketAPI.UnidadeTerra.CS.Models.Sale", b =>
                {
                    b.HasOne("MarketAPI.UnidadeTerra.CS.Models.Market", "Market")
                        .WithMany("Sales")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Market");
                });

            modelBuilder.Entity("MarketAPI.UnidadeTerra.CS.Models.Market", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("MarketAPI.UnidadeTerra.CS.Models.Sale", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
